{
    "sourceFile": "CH579EVT/EVT/EXAM/USB/Device/CH579EVT_USB_DISK_TEST/BLE/ch57x_ble_uart_mrs_app_only_test/bsp/include/bsp_log.h",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 11,
            "patches": [
                {
                    "date": 1677082622360,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1677082630171,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n #define LEVEL_WARN 2\r\n #define LEVEL_INFO 3\r\n #define LEVEL_DEBUG 4\r\n \r\n-#define \r\n+#define LOG_YELLOW  \\033[32;0m\r\n \r\n #define LOG_LEVEL LEVEL_DEBUG\r\n \r\n \r\n"
                },
                {
                    "date": 1677082676229,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,33 @@\n #define LEVEL_WARN 2\r\n #define LEVEL_INFO 3\r\n #define LEVEL_DEBUG 4\r\n \r\n-#define LOG_YELLOW  \\033[32;0m\r\n+#define NONE                 \"\\e[0m\"\r\n+#define BLACK                \"\\e[0;30m\"\r\n+#define L_BLACK              \"\\e[1;30m\"\r\n+#define RED                  \"\\e[0;31m\"\r\n+#define L_RED                \"\\e[1;31m\"\r\n+#define GREEN                \"\\e[0;32m\"\r\n+#define L_GREEN              \"\\e[1;32m\"\r\n+#define BROWN                \"\\e[0;33m\"\r\n+#define YELLOW               \"\\e[1;33m\"\r\n+#define BLUE                 \"\\e[0;34m\"\r\n+#define L_BLUE               \"\\e[1;34m\"\r\n+#define PURPLE               \"\\e[0;35m\"\r\n+#define L_PURPLE             \"\\e[1;35m\"\r\n+#define CYAN                 \"\\e[0;36m\"\r\n+#define L_CYAN               \"\\e[1;36m\"\r\n+#define GRAY                 \"\\e[0;37m\"\r\n+#define WHITE                \"\\e[1;37m\"\r\n+ \r\n+#define BOLD                 \"\\e[1m\"\r\n+#define UNDERLINE            \"\\e[4m\"\r\n+#define BLINK                \"\\e[5m\"\r\n+#define REVERSE              \"\\e[7m\"\r\n+#define HIDE                 \"\\e[8m\"\r\n+#define CLEAR                \"\\e[2J\"\r\n+#define CLRLINE              \"\\r\\e[K\" //or \"\\e[1K\\r\"\r\n \r\n #define LOG_LEVEL LEVEL_DEBUG\r\n \r\n \r\n"
                },
                {
                    "date": 1677082714444,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,14 +6,8 @@\n #include <string.h>\r\n #include \"CH579SFR.h\"\r\n #include \"CH57x_common.h\"\r\n \r\n-#define LEVEL_NONE 0\r\n-#define LEVEL_ERROR 1\r\n-#define LEVEL_WARN 2\r\n-#define LEVEL_INFO 3\r\n-#define LEVEL_DEBUG 4\r\n-\r\n #define NONE                 \"\\e[0m\"\r\n #define BLACK                \"\\e[0;30m\"\r\n #define L_BLACK              \"\\e[1;30m\"\r\n #define RED                  \"\\e[0;31m\"\r\n@@ -38,8 +32,14 @@\n #define HIDE                 \"\\e[8m\"\r\n #define CLEAR                \"\\e[2J\"\r\n #define CLRLINE              \"\\r\\e[K\" //or \"\\e[1K\\r\"\r\n \r\n+#define LEVEL_NONE 0\r\n+#define LEVEL_ERROR 1\r\n+#define LEVEL_WARN 2\r\n+#define LEVEL_INFO 3\r\n+#define LEVEL_DEBUG 4\r\n+\r\n #define LOG_LEVEL LEVEL_DEBUG\r\n \r\n \r\n int bsp_log_send_write(int level, const char *__format, ...);\r\n@@ -82,9 +82,9 @@\n // #define LOG_INFO(fmt, ...) PRINT(\"[INFO ] %-17s(%d):\" fmt, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n // #define LOG_DEBUG(fmt, ...) PRINT(\"[DEBUG] %-17s(%d):\" fmt, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n // #endif\r\n \r\n-#define LOG_ERROR(fmt, ...)     bsp_log_send_write(LEVEL_ERROR, \"[ERROR] %-17s(%d):\" fmt, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n+#define LOG_ERROR(fmt, ...)     bsp_log_send_write(LEVEL_ERROR, \"RED[ERROR] %-17s(%d):\" fmt, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n #define LOG_WARN(fmt, ...)      bsp_log_send_write(LEVEL_WARN,  \"[WARN ] %-17s(%d):\" fmt, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n #define LOG_INFO(fmt, ...)      bsp_log_send_write(LEVEL_INFO, \"[INFO ] %-17s(%d):\" fmt, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n #define LOG_DEBUG(fmt, ...)     bsp_log_send_write(LEVEL_DEBUG, \"[DEBUG] %-17s(%d):\" fmt, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n \r\n"
                },
                {
                    "date": 1677082810778,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,9 +82,9 @@\n // #define LOG_INFO(fmt, ...) PRINT(\"[INFO ] %-17s(%d):\" fmt, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n // #define LOG_DEBUG(fmt, ...) PRINT(\"[DEBUG] %-17s(%d):\" fmt, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n // #endif\r\n \r\n-#define LOG_ERROR(fmt, ...)     bsp_log_send_write(LEVEL_ERROR, \"RED[ERROR] %-17s(%d):\" fmt, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n+#define LOG_ERROR(fmt, ...)     bsp_log_send_write(LEVEL_ERROR, RED\"[ERROR] %-17s(%d):\" fmt NONE, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n #define LOG_WARN(fmt, ...)      bsp_log_send_write(LEVEL_WARN,  \"[WARN ] %-17s(%d):\" fmt, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n #define LOG_INFO(fmt, ...)      bsp_log_send_write(LEVEL_INFO, \"[INFO ] %-17s(%d):\" fmt, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n #define LOG_DEBUG(fmt, ...)     bsp_log_send_write(LEVEL_DEBUG, \"[DEBUG] %-17s(%d):\" fmt, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n \r\n"
                },
                {
                    "date": 1677082832136,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,9 +83,9 @@\n // #define LOG_DEBUG(fmt, ...) PRINT(\"[DEBUG] %-17s(%d):\" fmt, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n // #endif\r\n \r\n #define LOG_ERROR(fmt, ...)     bsp_log_send_write(LEVEL_ERROR, RED\"[ERROR] %-17s(%d):\" fmt NONE, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n-#define LOG_WARN(fmt, ...)      bsp_log_send_write(LEVEL_WARN,  \"[WARN ] %-17s(%d):\" fmt, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n-#define LOG_INFO(fmt, ...)      bsp_log_send_write(LEVEL_INFO, \"[INFO ] %-17s(%d):\" fmt, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n-#define LOG_DEBUG(fmt, ...)     bsp_log_send_write(LEVEL_DEBUG, \"[DEBUG] %-17s(%d):\" fmt, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n+#define LOG_WARN(fmt, ...)      bsp_log_send_write(LEVEL_WARN,  \"[WARN ] %-17s(%d):\" fmt NONE, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n+#define LOG_INFO(fmt, ...)      bsp_log_send_write(LEVEL_INFO, GREEN \"[INFO ] %-17s(%d):\" fmt NONE, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n+#define LOG_DEBUG(fmt, ...)     bsp_log_send_write(LEVEL_DEBUG, \"[DEBUG] %-17s(%d):\" fmt NONE, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n \r\n #endif\r\n"
                },
                {
                    "date": 1677082841820,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,9 +83,9 @@\n // #define LOG_DEBUG(fmt, ...) PRINT(\"[DEBUG] %-17s(%d):\" fmt, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n // #endif\r\n \r\n #define LOG_ERROR(fmt, ...)     bsp_log_send_write(LEVEL_ERROR, RED\"[ERROR] %-17s(%d):\" fmt NONE, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n-#define LOG_WARN(fmt, ...)      bsp_log_send_write(LEVEL_WARN,  \"[WARN ] %-17s(%d):\" fmt NONE, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n+#define LOG_WARN(fmt, ...)      bsp_log_send_write(LEVEL_WARN,  YELLOW \"[WARN ] %-17s(%d):\" fmt NONE, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n #define LOG_INFO(fmt, ...)      bsp_log_send_write(LEVEL_INFO, GREEN \"[INFO ] %-17s(%d):\" fmt NONE, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n #define LOG_DEBUG(fmt, ...)     bsp_log_send_write(LEVEL_DEBUG, \"[DEBUG] %-17s(%d):\" fmt NONE, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n \r\n #endif\r\n"
                },
                {
                    "date": 1677082858762,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,91 @@\n+#ifndef __LOG_H\r\n+#define __LOG_H\r\n+\r\n+#include <stdarg.h>\r\n+#include <stdio.h>\r\n+#include <string.h>\r\n+#include \"CH579SFR.h\"\r\n+#include \"CH57x_common.h\"\r\n+\r\n+#define NONE                 \"\\e[0m\"\r\n+#define BLACK                \"\\e[0;30m\"\r\n+#define L_BLACK              \"\\e[1;30m\"\r\n+#define RED                  \"\\e[0;31m\"\r\n+#define L_RED                \"\\e[1;31m\"\r\n+#define GREEN                \"\\e[0;32m\"\r\n+#define L_GREEN              \"\\e[1;32m\"\r\n+#define BROWN                \"\\e[0;33m\"\r\n+#define YELLOW               \"\\e[1;33m\"\r\n+#define BLUE                 \"\\e[0;34m\"\r\n+#define L_BLUE               \"\\e[1;34m\"\r\n+#define PURPLE               \"\\e[0;35m\"\r\n+#define L_PURPLE             \"\\e[1;35m\"\r\n+#define CYAN                 \"\\e[0;36m\"\r\n+#define L_CYAN               \"\\e[1;36m\"\r\n+#define GRAY                 \"\\e[0;37m\"\r\n+#define WHITE                \"\\e[1;37m\"\r\n+ \r\n+#define BOLD                 \"\\e[1m\"\r\n+#define UNDERLINE            \"\\e[4m\"\r\n+#define BLINK                \"\\e[5m\"\r\n+#define REVERSE              \"\\e[7m\"\r\n+#define HIDE                 \"\\e[8m\"\r\n+#define CLEAR                \"\\e[2J\"\r\n+#define CLRLINE              \"\\r\\e[K\" //or \"\\e[1K\\r\"\r\n+\r\n+#define LEVEL_NONE 0\r\n+#define LEVEL_ERROR 1\r\n+#define LEVEL_WARN 2\r\n+#define LEVEL_INFO 3\r\n+#define LEVEL_DEBUG 4\r\n+\r\n+#define LOG_LEVEL LEVEL_DEBUG\r\n+\r\n+\r\n+int bsp_log_send_write(int level, const char *__format, ...);\r\n+\r\n+// windows:\r\n+// #define filename(x) strrchr(x,'\\\\')?strrchr(x,'\\\\')+1:x\r\n+// linux:\r\n+#define filename(x) strrchr(x,'/')?strrchr(x,'/')+1:x\r\n+\r\n+// #define __FILENAME__ (strrchr(__FILE__, '\\\\') ? (strrchr(__FILE__, '\\\\') + 1) : __FILE__)\r\n+// #define LOG_ERROR(fmt, ...) \t\tPRINT(\"[ERROR] %s(%d)<%s()> :\"fmt\"\\n\", __FILENAME__, __LINE__, __func__, ##__VA_ARGS__)\r\n+\r\n+// #if LOG_LEVEL == LOG_ERROR\r\n+// #define LOG_ERROR(fmt, ...)\r\n+// #define LOG_WARN(fmt, ...)\r\n+// #define LOG_INFO(fmt, ...)\r\n+// #define LOG_DEBUG(fmt, ...)\r\n+\r\n+// #elif LOG_LEVEL == LOG_ERROR\r\n+// #define LOG_ERROR(fmt, ...) PRINT(\"[ERROR] %-17s(%d):\" fmt, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n+// #define LOG_WARN(fmt, ...)\r\n+// #define LOG_INFO(fmt, ...)\r\n+// #define LOG_DEBUG(fmt, ...)\r\n+\r\n+// #elif LOG_LEVEL == LEVEL_WARN\r\n+// #define LOG_ERROR(fmt, ...) PRINT(\"[ERROR] %-17s(%d):\" fmt, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n+// #define LOG_WARN(fmt, ...) PRINT(\"[WARN ] %-17s(%d):\" fmt, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n+// #define LOG_INFO(fmt, ...)\r\n+// #define LOG_DEBUG(fmt, ...)\r\n+\r\n+// #elif LOG_LEVEL == LEVEL_INFO\r\n+// #define LOG_ERROR(fmt, ...) PRINT(\"[ERROR] %-17s(%d):\" fmt, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n+// #define LOG_WARN(fmt, ...) PRINT(\"[WARN ] %-17s(%d):\" fmt, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n+// #define LOG_INFO(fmt, ...) PRINT(\"[INFO ] %-17s(%d):\" fmt, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n+// #define LOG_DEBUG(fmt, ...)\r\n+\r\n+// #elif LOG_LEVEL == LEVEL_DEBUG\r\n+// #define LOG_ERROR(fmt, ...) PRINT(\"[ERROR] %-17s(%d):\" fmt, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n+// #define LOG_WARN(fmt, ...) PRINT(\"[WARN ] %-17s(%d):\" fmt, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n+// #define LOG_INFO(fmt, ...) PRINT(\"[INFO ] %-17s(%d):\" fmt, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n+// #define LOG_DEBUG(fmt, ...) PRINT(\"[DEBUG] %-17s(%d):\" fmt, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n+// #endif\r\n+\r\n+#define LOG_ERROR(fmt, ...)     bsp_log_send_write(LEVEL_ERROR, RED\"[ERROR] %-17s(%d):\" fmt NONE, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n+#define LOG_WARN(fmt, ...)      bsp_log_send_write(LEVEL_WARN, YELLOW \"[WARN ] %-17s(%d):\" fmt NONE, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n+#define LOG_INFO(fmt, ...)      bsp_log_send_write(LEVEL_INFO, GREEN \"[INFO ] %-17s(%d):\" fmt NONE, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n+#define LOG_DEBUG(fmt, ...)     bsp_log_send_write(LEVEL_DEBUG, BLUE \"[DEBUG] %-17s(%d):\" fmt NONE, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n+\r\n+#endif\r\n"
                },
                {
                    "date": 1677082904973,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,101 +82,10 @@\n // #define LOG_INFO(fmt, ...) PRINT(\"[INFO ] %-17s(%d):\" fmt, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n // #define LOG_DEBUG(fmt, ...) PRINT(\"[DEBUG] %-17s(%d):\" fmt, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n // #endif\r\n \r\n-#define LOG_ERROR(fmt, ...)     bsp_log_send_write(LEVEL_ERROR, RED\"[ERROR] %-17s(%d):\" fmt NONE, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n+#define LOG_ERROR(fmt, ...)     bsp_log_send_write(LEVEL_ERROR, RED\"[ERROR] %-17s(%d):\" fmt NONE||, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n #define LOG_WARN(fmt, ...)      bsp_log_send_write(LEVEL_WARN, YELLOW \"[WARN ] %-17s(%d):\" fmt NONE, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n #define LOG_INFO(fmt, ...)      bsp_log_send_write(LEVEL_INFO, GREEN \"[INFO ] %-17s(%d):\" fmt NONE, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n #define LOG_DEBUG(fmt, ...)     bsp_log_send_write(LEVEL_DEBUG, BLUE \"[DEBUG] %-17s(%d):\" fmt NONE, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n \r\n #endif\r\n-#ifndef __LOG_H\r\n-#define __LOG_H\r\n-\r\n-#include <stdarg.h>\r\n-#include <stdio.h>\r\n-#include <string.h>\r\n-#include \"CH579SFR.h\"\r\n-#include \"CH57x_common.h\"\r\n-\r\n-#define NONE                 \"\\e[0m\"\r\n-#define BLACK                \"\\e[0;30m\"\r\n-#define L_BLACK              \"\\e[1;30m\"\r\n-#define RED                  \"\\e[0;31m\"\r\n-#define L_RED                \"\\e[1;31m\"\r\n-#define GREEN                \"\\e[0;32m\"\r\n-#define L_GREEN              \"\\e[1;32m\"\r\n-#define BROWN                \"\\e[0;33m\"\r\n-#define YELLOW               \"\\e[1;33m\"\r\n-#define BLUE                 \"\\e[0;34m\"\r\n-#define L_BLUE               \"\\e[1;34m\"\r\n-#define PURPLE               \"\\e[0;35m\"\r\n-#define L_PURPLE             \"\\e[1;35m\"\r\n-#define CYAN                 \"\\e[0;36m\"\r\n-#define L_CYAN               \"\\e[1;36m\"\r\n-#define GRAY                 \"\\e[0;37m\"\r\n-#define WHITE                \"\\e[1;37m\"\r\n- \r\n-#define BOLD                 \"\\e[1m\"\r\n-#define UNDERLINE            \"\\e[4m\"\r\n-#define BLINK                \"\\e[5m\"\r\n-#define REVERSE              \"\\e[7m\"\r\n-#define HIDE                 \"\\e[8m\"\r\n-#define CLEAR                \"\\e[2J\"\r\n-#define CLRLINE              \"\\r\\e[K\" //or \"\\e[1K\\r\"\r\n-\r\n-#define LEVEL_NONE 0\r\n-#define LEVEL_ERROR 1\r\n-#define LEVEL_WARN 2\r\n-#define LEVEL_INFO 3\r\n-#define LEVEL_DEBUG 4\r\n-\r\n-#define LOG_LEVEL LEVEL_DEBUG\r\n-\r\n-\r\n-int bsp_log_send_write(int level, const char *__format, ...);\r\n-\r\n-// windows:\r\n-// #define filename(x) strrchr(x,'\\\\')?strrchr(x,'\\\\')+1:x\r\n-// linux:\r\n-#define filename(x) strrchr(x,'/')?strrchr(x,'/')+1:x\r\n-\r\n-// #define __FILENAME__ (strrchr(__FILE__, '\\\\') ? (strrchr(__FILE__, '\\\\') + 1) : __FILE__)\r\n-// #define LOG_ERROR(fmt, ...) \t\tPRINT(\"[ERROR] %s(%d)<%s()> :\"fmt\"\\n\", __FILENAME__, __LINE__, __func__, ##__VA_ARGS__)\r\n-\r\n-// #if LOG_LEVEL == LOG_ERROR\r\n-// #define LOG_ERROR(fmt, ...)\r\n-// #define LOG_WARN(fmt, ...)\r\n-// #define LOG_INFO(fmt, ...)\r\n-// #define LOG_DEBUG(fmt, ...)\r\n-\r\n-// #elif LOG_LEVEL == LOG_ERROR\r\n-// #define LOG_ERROR(fmt, ...) PRINT(\"[ERROR] %-17s(%d):\" fmt, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n-// #define LOG_WARN(fmt, ...)\r\n-// #define LOG_INFO(fmt, ...)\r\n-// #define LOG_DEBUG(fmt, ...)\r\n-\r\n-// #elif LOG_LEVEL == LEVEL_WARN\r\n-// #define LOG_ERROR(fmt, ...) PRINT(\"[ERROR] %-17s(%d):\" fmt, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n-// #define LOG_WARN(fmt, ...) PRINT(\"[WARN ] %-17s(%d):\" fmt, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n-// #define LOG_INFO(fmt, ...)\r\n-// #define LOG_DEBUG(fmt, ...)\r\n-\r\n-// #elif LOG_LEVEL == LEVEL_INFO\r\n-// #define LOG_ERROR(fmt, ...) PRINT(\"[ERROR] %-17s(%d):\" fmt, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n-// #define LOG_WARN(fmt, ...) PRINT(\"[WARN ] %-17s(%d):\" fmt, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n-// #define LOG_INFO(fmt, ...) PRINT(\"[INFO ] %-17s(%d):\" fmt, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n-// #define LOG_DEBUG(fmt, ...)\r\n-\r\n-// #elif LOG_LEVEL == LEVEL_DEBUG\r\n-// #define LOG_ERROR(fmt, ...) PRINT(\"[ERROR] %-17s(%d):\" fmt, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n-// #define LOG_WARN(fmt, ...) PRINT(\"[WARN ] %-17s(%d):\" fmt, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n-// #define LOG_INFO(fmt, ...) PRINT(\"[INFO ] %-17s(%d):\" fmt, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n-// #define LOG_DEBUG(fmt, ...) PRINT(\"[DEBUG] %-17s(%d):\" fmt, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n-// #endif\r\n-\r\n-#define LOG_ERROR(fmt, ...)     bsp_log_send_write(LEVEL_ERROR, RED\"[ERROR] %-17s(%d):\" fmt NONE, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n-#define LOG_WARN(fmt, ...)      bsp_log_send_write(LEVEL_WARN,  YELLOW \"[WARN ] %-17s(%d):\" fmt NONE, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n-#define LOG_INFO(fmt, ...)      bsp_log_send_write(LEVEL_INFO, GREEN \"[INFO ] %-17s(%d):\" fmt NONE, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n-#define LOG_DEBUG(fmt, ...)     bsp_log_send_write(LEVEL_DEBUG, \"[DEBUG] %-17s(%d):\" fmt NONE, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n-\r\n-#endif\r\n"
                },
                {
                    "date": 1677082910232,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,9 +82,9 @@\n // #define LOG_INFO(fmt, ...) PRINT(\"[INFO ] %-17s(%d):\" fmt, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n // #define LOG_DEBUG(fmt, ...) PRINT(\"[DEBUG] %-17s(%d):\" fmt, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n // #endif\r\n \r\n-#define LOG_ERROR(fmt, ...)     bsp_log_send_write(LEVEL_ERROR, RED\"[ERROR] %-17s(%d):\" fmt NONE||, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n+#define LOG_ERROR(fmt, ...)     bsp_log_send_write(LEVEL_ERROR, RED\"[ERROR] %-17s(%d):\" fmt NONE\"\\r\\n\", filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n #define LOG_WARN(fmt, ...)      bsp_log_send_write(LEVEL_WARN, YELLOW \"[WARN ] %-17s(%d):\" fmt NONE, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n #define LOG_INFO(fmt, ...)      bsp_log_send_write(LEVEL_INFO, GREEN \"[INFO ] %-17s(%d):\" fmt NONE, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n #define LOG_DEBUG(fmt, ...)     bsp_log_send_write(LEVEL_DEBUG, BLUE \"[DEBUG] %-17s(%d):\" fmt NONE, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n \r\n"
                },
                {
                    "date": 1677082918040,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,91 @@\n+#ifndef __LOG_H\r\n+#define __LOG_H\r\n+\r\n+#include <stdarg.h>\r\n+#include <stdio.h>\r\n+#include <string.h>\r\n+#include \"CH579SFR.h\"\r\n+#include \"CH57x_common.h\"\r\n+\r\n+#define NONE                 \"\\e[0m\"\r\n+#define BLACK                \"\\e[0;30m\"\r\n+#define L_BLACK              \"\\e[1;30m\"\r\n+#define RED                  \"\\e[0;31m\"\r\n+#define L_RED                \"\\e[1;31m\"\r\n+#define GREEN                \"\\e[0;32m\"\r\n+#define L_GREEN              \"\\e[1;32m\"\r\n+#define BROWN                \"\\e[0;33m\"\r\n+#define YELLOW               \"\\e[1;33m\"\r\n+#define BLUE                 \"\\e[0;34m\"\r\n+#define L_BLUE               \"\\e[1;34m\"\r\n+#define PURPLE               \"\\e[0;35m\"\r\n+#define L_PURPLE             \"\\e[1;35m\"\r\n+#define CYAN                 \"\\e[0;36m\"\r\n+#define L_CYAN               \"\\e[1;36m\"\r\n+#define GRAY                 \"\\e[0;37m\"\r\n+#define WHITE                \"\\e[1;37m\"\r\n+ \r\n+#define BOLD                 \"\\e[1m\"\r\n+#define UNDERLINE            \"\\e[4m\"\r\n+#define BLINK                \"\\e[5m\"\r\n+#define REVERSE              \"\\e[7m\"\r\n+#define HIDE                 \"\\e[8m\"\r\n+#define CLEAR                \"\\e[2J\"\r\n+#define CLRLINE              \"\\r\\e[K\" //or \"\\e[1K\\r\"\r\n+\r\n+#define LEVEL_NONE 0\r\n+#define LEVEL_ERROR 1\r\n+#define LEVEL_WARN 2\r\n+#define LEVEL_INFO 3\r\n+#define LEVEL_DEBUG 4\r\n+\r\n+#define LOG_LEVEL LEVEL_DEBUG\r\n+\r\n+\r\n+int bsp_log_send_write(int level, const char *__format, ...);\r\n+\r\n+// windows:\r\n+// #define filename(x) strrchr(x,'\\\\')?strrchr(x,'\\\\')+1:x\r\n+// linux:\r\n+#define filename(x) strrchr(x,'/')?strrchr(x,'/')+1:x\r\n+\r\n+// #define __FILENAME__ (strrchr(__FILE__, '\\\\') ? (strrchr(__FILE__, '\\\\') + 1) : __FILE__)\r\n+// #define LOG_ERROR(fmt, ...) \t\tPRINT(\"[ERROR] %s(%d)<%s()> :\"fmt\"\\n\", __FILENAME__, __LINE__, __func__, ##__VA_ARGS__)\r\n+\r\n+// #if LOG_LEVEL == LOG_ERROR\r\n+// #define LOG_ERROR(fmt, ...)\r\n+// #define LOG_WARN(fmt, ...)\r\n+// #define LOG_INFO(fmt, ...)\r\n+// #define LOG_DEBUG(fmt, ...)\r\n+\r\n+// #elif LOG_LEVEL == LOG_ERROR\r\n+// #define LOG_ERROR(fmt, ...) PRINT(\"[ERROR] %-17s(%d):\" fmt, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n+// #define LOG_WARN(fmt, ...)\r\n+// #define LOG_INFO(fmt, ...)\r\n+// #define LOG_DEBUG(fmt, ...)\r\n+\r\n+// #elif LOG_LEVEL == LEVEL_WARN\r\n+// #define LOG_ERROR(fmt, ...) PRINT(\"[ERROR] %-17s(%d):\" fmt, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n+// #define LOG_WARN(fmt, ...) PRINT(\"[WARN ] %-17s(%d):\" fmt, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n+// #define LOG_INFO(fmt, ...)\r\n+// #define LOG_DEBUG(fmt, ...)\r\n+\r\n+// #elif LOG_LEVEL == LEVEL_INFO\r\n+// #define LOG_ERROR(fmt, ...) PRINT(\"[ERROR] %-17s(%d):\" fmt, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n+// #define LOG_WARN(fmt, ...) PRINT(\"[WARN ] %-17s(%d):\" fmt, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n+// #define LOG_INFO(fmt, ...) PRINT(\"[INFO ] %-17s(%d):\" fmt, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n+// #define LOG_DEBUG(fmt, ...)\r\n+\r\n+// #elif LOG_LEVEL == LEVEL_DEBUG\r\n+// #define LOG_ERROR(fmt, ...) PRINT(\"[ERROR] %-17s(%d):\" fmt, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n+// #define LOG_WARN(fmt, ...) PRINT(\"[WARN ] %-17s(%d):\" fmt, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n+// #define LOG_INFO(fmt, ...) PRINT(\"[INFO ] %-17s(%d):\" fmt, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n+// #define LOG_DEBUG(fmt, ...) PRINT(\"[DEBUG] %-17s(%d):\" fmt, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n+// #endif\r\n+\r\n+#define LOG_ERROR(fmt, ...)     bsp_log_send_write(LEVEL_ERROR, RED\"[ERROR] %-17s(%d):\" fmt NONE, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n+#define LOG_WARN(fmt, ...)      bsp_log_send_write(LEVEL_WARN, YELLOW \"[WARN ] %-17s(%d):\" fmt NONE, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n+#define LOG_INFO(fmt, ...)      bsp_log_send_write(LEVEL_INFO, GREEN \"[INFO ] %-17s(%d):\" fmt NONE, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n+#define LOG_DEBUG(fmt, ...)     bsp_log_send_write(LEVEL_DEBUG, BLUE \"[DEBUG] %-17s(%d):\" fmt NONE, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n+\r\n+#endif\r\n"
                },
                {
                    "date": 1677083032099,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,100 +83,9 @@\n // #define LOG_DEBUG(fmt, ...) PRINT(\"[DEBUG] %-17s(%d):\" fmt, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n // #endif\r\n \r\n #define LOG_ERROR(fmt, ...)     bsp_log_send_write(LEVEL_ERROR, RED\"[ERROR] %-17s(%d):\" fmt NONE, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n-#define LOG_WARN(fmt, ...)      bsp_log_send_write(LEVEL_WARN, YELLOW \"[WARN ] %-17s(%d):\" fmt NONE, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n+#define LOG_WARN(fmt, ...)      bsp_log_send_write(LEVEL_WARN, YELLOW\"[WARN ] %-17s(%d):\" fmt NONE, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n #define LOG_INFO(fmt, ...)      bsp_log_send_write(LEVEL_INFO, GREEN \"[INFO ] %-17s(%d):\" fmt NONE, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n #define LOG_DEBUG(fmt, ...)     bsp_log_send_write(LEVEL_DEBUG, BLUE \"[DEBUG] %-17s(%d):\" fmt NONE, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n \r\n #endif\r\n-#ifndef __LOG_H\r\n-#define __LOG_H\r\n-\r\n-#include <stdarg.h>\r\n-#include <stdio.h>\r\n-#include <string.h>\r\n-#include \"CH579SFR.h\"\r\n-#include \"CH57x_common.h\"\r\n-\r\n-#define NONE                 \"\\e[0m\"\r\n-#define BLACK                \"\\e[0;30m\"\r\n-#define L_BLACK              \"\\e[1;30m\"\r\n-#define RED                  \"\\e[0;31m\"\r\n-#define L_RED                \"\\e[1;31m\"\r\n-#define GREEN                \"\\e[0;32m\"\r\n-#define L_GREEN              \"\\e[1;32m\"\r\n-#define BROWN                \"\\e[0;33m\"\r\n-#define YELLOW               \"\\e[1;33m\"\r\n-#define BLUE                 \"\\e[0;34m\"\r\n-#define L_BLUE               \"\\e[1;34m\"\r\n-#define PURPLE               \"\\e[0;35m\"\r\n-#define L_PURPLE             \"\\e[1;35m\"\r\n-#define CYAN                 \"\\e[0;36m\"\r\n-#define L_CYAN               \"\\e[1;36m\"\r\n-#define GRAY                 \"\\e[0;37m\"\r\n-#define WHITE                \"\\e[1;37m\"\r\n- \r\n-#define BOLD                 \"\\e[1m\"\r\n-#define UNDERLINE            \"\\e[4m\"\r\n-#define BLINK                \"\\e[5m\"\r\n-#define REVERSE              \"\\e[7m\"\r\n-#define HIDE                 \"\\e[8m\"\r\n-#define CLEAR                \"\\e[2J\"\r\n-#define CLRLINE              \"\\r\\e[K\" //or \"\\e[1K\\r\"\r\n-\r\n-#define LEVEL_NONE 0\r\n-#define LEVEL_ERROR 1\r\n-#define LEVEL_WARN 2\r\n-#define LEVEL_INFO 3\r\n-#define LEVEL_DEBUG 4\r\n-\r\n-#define LOG_LEVEL LEVEL_DEBUG\r\n-\r\n-\r\n-int bsp_log_send_write(int level, const char *__format, ...);\r\n-\r\n-// windows:\r\n-// #define filename(x) strrchr(x,'\\\\')?strrchr(x,'\\\\')+1:x\r\n-// linux:\r\n-#define filename(x) strrchr(x,'/')?strrchr(x,'/')+1:x\r\n-\r\n-// #define __FILENAME__ (strrchr(__FILE__, '\\\\') ? (strrchr(__FILE__, '\\\\') + 1) : __FILE__)\r\n-// #define LOG_ERROR(fmt, ...) \t\tPRINT(\"[ERROR] %s(%d)<%s()> :\"fmt\"\\n\", __FILENAME__, __LINE__, __func__, ##__VA_ARGS__)\r\n-\r\n-// #if LOG_LEVEL == LOG_ERROR\r\n-// #define LOG_ERROR(fmt, ...)\r\n-// #define LOG_WARN(fmt, ...)\r\n-// #define LOG_INFO(fmt, ...)\r\n-// #define LOG_DEBUG(fmt, ...)\r\n-\r\n-// #elif LOG_LEVEL == LOG_ERROR\r\n-// #define LOG_ERROR(fmt, ...) PRINT(\"[ERROR] %-17s(%d):\" fmt, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n-// #define LOG_WARN(fmt, ...)\r\n-// #define LOG_INFO(fmt, ...)\r\n-// #define LOG_DEBUG(fmt, ...)\r\n-\r\n-// #elif LOG_LEVEL == LEVEL_WARN\r\n-// #define LOG_ERROR(fmt, ...) PRINT(\"[ERROR] %-17s(%d):\" fmt, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n-// #define LOG_WARN(fmt, ...) PRINT(\"[WARN ] %-17s(%d):\" fmt, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n-// #define LOG_INFO(fmt, ...)\r\n-// #define LOG_DEBUG(fmt, ...)\r\n-\r\n-// #elif LOG_LEVEL == LEVEL_INFO\r\n-// #define LOG_ERROR(fmt, ...) PRINT(\"[ERROR] %-17s(%d):\" fmt, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n-// #define LOG_WARN(fmt, ...) PRINT(\"[WARN ] %-17s(%d):\" fmt, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n-// #define LOG_INFO(fmt, ...) PRINT(\"[INFO ] %-17s(%d):\" fmt, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n-// #define LOG_DEBUG(fmt, ...)\r\n-\r\n-// #elif LOG_LEVEL == LEVEL_DEBUG\r\n-// #define LOG_ERROR(fmt, ...) PRINT(\"[ERROR] %-17s(%d):\" fmt, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n-// #define LOG_WARN(fmt, ...) PRINT(\"[WARN ] %-17s(%d):\" fmt, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n-// #define LOG_INFO(fmt, ...) PRINT(\"[INFO ] %-17s(%d):\" fmt, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n-// #define LOG_DEBUG(fmt, ...) PRINT(\"[DEBUG] %-17s(%d):\" fmt, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n-// #endif\r\n-\r\n-#define LOG_ERROR(fmt, ...)     bsp_log_send_write(LEVEL_ERROR, RED\"[ERROR] %-17s(%d):\" fmt NONE\"\\r\\n\", filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n-#define LOG_WARN(fmt, ...)      bsp_log_send_write(LEVEL_WARN, YELLOW \"[WARN ] %-17s(%d):\" fmt NONE, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n-#define LOG_INFO(fmt, ...)      bsp_log_send_write(LEVEL_INFO, GREEN \"[INFO ] %-17s(%d):\" fmt NONE, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n-#define LOG_DEBUG(fmt, ...)     bsp_log_send_write(LEVEL_DEBUG, BLUE \"[DEBUG] %-17s(%d):\" fmt NONE, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n-\r\n-#endif\r\n"
                }
            ],
            "date": 1677082622360,
            "name": "Commit-0",
            "content": "#ifndef __LOG_H\r\n#define __LOG_H\r\n\r\n#include <stdarg.h>\r\n#include <stdio.h>\r\n#include <string.h>\r\n#include \"CH579SFR.h\"\r\n#include \"CH57x_common.h\"\r\n\r\n#define LEVEL_NONE 0\r\n#define LEVEL_ERROR 1\r\n#define LEVEL_WARN 2\r\n#define LEVEL_INFO 3\r\n#define LEVEL_DEBUG 4\r\n\r\n#define \r\n\r\n#define LOG_LEVEL LEVEL_DEBUG\r\n\r\n\r\nint bsp_log_send_write(int level, const char *__format, ...);\r\n\r\n// windows:\r\n// #define filename(x) strrchr(x,'\\\\')?strrchr(x,'\\\\')+1:x\r\n// linux:\r\n#define filename(x) strrchr(x,'/')?strrchr(x,'/')+1:x\r\n\r\n// #define __FILENAME__ (strrchr(__FILE__, '\\\\') ? (strrchr(__FILE__, '\\\\') + 1) : __FILE__)\r\n// #define LOG_ERROR(fmt, ...) \t\tPRINT(\"[ERROR] %s(%d)<%s()> :\"fmt\"\\n\", __FILENAME__, __LINE__, __func__, ##__VA_ARGS__)\r\n\r\n// #if LOG_LEVEL == LOG_ERROR\r\n// #define LOG_ERROR(fmt, ...)\r\n// #define LOG_WARN(fmt, ...)\r\n// #define LOG_INFO(fmt, ...)\r\n// #define LOG_DEBUG(fmt, ...)\r\n\r\n// #elif LOG_LEVEL == LOG_ERROR\r\n// #define LOG_ERROR(fmt, ...) PRINT(\"[ERROR] %-17s(%d):\" fmt, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n// #define LOG_WARN(fmt, ...)\r\n// #define LOG_INFO(fmt, ...)\r\n// #define LOG_DEBUG(fmt, ...)\r\n\r\n// #elif LOG_LEVEL == LEVEL_WARN\r\n// #define LOG_ERROR(fmt, ...) PRINT(\"[ERROR] %-17s(%d):\" fmt, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n// #define LOG_WARN(fmt, ...) PRINT(\"[WARN ] %-17s(%d):\" fmt, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n// #define LOG_INFO(fmt, ...)\r\n// #define LOG_DEBUG(fmt, ...)\r\n\r\n// #elif LOG_LEVEL == LEVEL_INFO\r\n// #define LOG_ERROR(fmt, ...) PRINT(\"[ERROR] %-17s(%d):\" fmt, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n// #define LOG_WARN(fmt, ...) PRINT(\"[WARN ] %-17s(%d):\" fmt, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n// #define LOG_INFO(fmt, ...) PRINT(\"[INFO ] %-17s(%d):\" fmt, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n// #define LOG_DEBUG(fmt, ...)\r\n\r\n// #elif LOG_LEVEL == LEVEL_DEBUG\r\n// #define LOG_ERROR(fmt, ...) PRINT(\"[ERROR] %-17s(%d):\" fmt, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n// #define LOG_WARN(fmt, ...) PRINT(\"[WARN ] %-17s(%d):\" fmt, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n// #define LOG_INFO(fmt, ...) PRINT(\"[INFO ] %-17s(%d):\" fmt, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n// #define LOG_DEBUG(fmt, ...) PRINT(\"[DEBUG] %-17s(%d):\" fmt, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n// #endif\r\n\r\n#define LOG_ERROR(fmt, ...)     bsp_log_send_write(LEVEL_ERROR, \"[ERROR] %-17s(%d):\" fmt, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n#define LOG_WARN(fmt, ...)      bsp_log_send_write(LEVEL_WARN,  \"[WARN ] %-17s(%d):\" fmt, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n#define LOG_INFO(fmt, ...)      bsp_log_send_write(LEVEL_INFO, \"[INFO ] %-17s(%d):\" fmt, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n#define LOG_DEBUG(fmt, ...)     bsp_log_send_write(LEVEL_DEBUG, \"[DEBUG] %-17s(%d):\" fmt, filename(__FILE__), __LINE__, ##__VA_ARGS__)\r\n\r\n#endif\r\n"
        }
    ]
}